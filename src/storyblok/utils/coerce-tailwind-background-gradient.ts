import { Color, GradientDirection } from "../interface";
import clsx from "clsx";

const coerceTailwindFromColor = (color: Color) => {
  return clsx({
    "from-transparent": color === Color.TRANSPARENT,
    "from-background": color === Color.BACKGROUND,
    "from-foreground": color === Color.FOREGROUND,
    "from-divider": color === Color.DIVIDER,
    "from-focus": color === Color.FOCUS,
    "from-content1": color === Color.CONTENT1,
    "from-content2": color === Color.CONTENT2,
    "from-content3": color === Color.CONTENT3,
    "from-content4": color === Color.CONTENT4,
    "from-default": color === Color.DEFAULT,
    "from-primary": color === Color.DEFAULT_PRIMARY,
    "from-secondary": color === Color.DEFAULT_SECONDARY,
    "from-success": color === Color.DEFAULT_SUCCESS,
    "from-warning": color === Color.DEFAULT_WARNING,
    "from-danger": color === Color.DEFAULT_DANGER,
    "from-primary-50": color === Color.PRIMARY_50,
    "from-primary-100": color === Color.PRIMARY_100,
    "from-primary-200": color === Color.PRIMARY_200,
    "from-primary-300": color === Color.PRIMARY_300,
    "from-primary-400": color === Color.PRIMARY_400,
    "from-primary-500": color === Color.PRIMARY_500,
    "from-primary-600": color === Color.PRIMARY_600,
    "from-primary-700": color === Color.PRIMARY_700,
    "from-primary-800": color === Color.PRIMARY_800,
    "from-primary-900": color === Color.PRIMARY_900,
    "from-secondary-50": color === Color.SECONDARY_50,
    "from-secondary-100": color === Color.SECONDARY_100,
    "from-secondary-200": color === Color.SECONDARY_200,
    "from-secondary-300": color === Color.SECONDARY_300,
    "from-secondary-400": color === Color.SECONDARY_400,
    "from-secondary-500": color === Color.SECONDARY_500,
    "from-secondary-600": color === Color.SECONDARY_600,
    "from-secondary-700": color === Color.SECONDARY_700,
    "from-secondary-800": color === Color.SECONDARY_800,
    "from-secondary-900": color === Color.SECONDARY_900,
    "from-success-50": color === Color.SUCCESS_50,
    "from-success-100": color === Color.SUCCESS_100,
    "from-success-200": color === Color.SUCCESS_200,
    "from-success-300": color === Color.SUCCESS_300,
    "from-success-400": color === Color.SUCCESS_400,
    "from-success-500": color === Color.SUCCESS_500,
    "from-success-600": color === Color.SUCCESS_600,
    "from-success-700": color === Color.SUCCESS_700,
    "from-success-800": color === Color.SUCCESS_800,
    "from-success-900": color === Color.SUCCESS_900,
    "from-warning-50": color === Color.WARNING_50,
    "from-warning-100": color === Color.WARNING_100,
    "from-warning-200": color === Color.WARNING_200,
    "from-warning-300": color === Color.WARNING_300,
    "from-warning-400": color === Color.WARNING_400,
    "from-warning-500": color === Color.WARNING_500,
    "from-warning-600": color === Color.WARNING_600,
    "from-warning-700": color === Color.WARNING_700,
    "from-warning-800": color === Color.WARNING_800,
    "from-warning-900": color === Color.WARNING_900,
    "from-danger-50": color === Color.DANGER_50,
    "from-danger-100": color === Color.DANGER_100,
    "from-danger-200": color === Color.DANGER_200,
    "from-danger-300": color === Color.DANGER_300,
    "from-danger-400": color === Color.DANGER_400,
    "from-danger-500": color === Color.DANGER_500,
    "from-danger-600": color === Color.DANGER_600,
    "from-danger-700": color === Color.DANGER_700,
    "from-danger-800": color === Color.DANGER_800,
    "from-danger-900": color === Color.DANGER_900,
  });
};
const coerceTailwindViaColor = (color: Color) => {
  return clsx({
    "via-transparent": color === Color.TRANSPARENT,
    "via-background": color === Color.BACKGROUND,
    "via-foreground": color === Color.FOREGROUND,
    "via-divider": color === Color.DIVIDER,
    "via-focus": color === Color.FOCUS,
    "via-content1": color === Color.CONTENT1,
    "via-content2": color === Color.CONTENT2,
    "via-content3": color === Color.CONTENT3,
    "via-content4": color === Color.CONTENT4,
    "via-default": color === Color.DEFAULT,
    "via-primary": color === Color.DEFAULT_PRIMARY,
    "via-secondary": color === Color.DEFAULT_SECONDARY,
    "via-success": color === Color.DEFAULT_SUCCESS,
    "via-warning": color === Color.DEFAULT_WARNING,
    "via-danger": color === Color.DEFAULT_DANGER,
    "via-primary-50": color === Color.PRIMARY_50,
    "via-primary-100": color === Color.PRIMARY_100,
    "via-primary-200": color === Color.PRIMARY_200,
    "via-primary-300": color === Color.PRIMARY_300,
    "via-primary-400": color === Color.PRIMARY_400,
    "via-primary-500": color === Color.PRIMARY_500,
    "via-primary-600": color === Color.PRIMARY_600,
    "via-primary-700": color === Color.PRIMARY_700,
    "via-primary-800": color === Color.PRIMARY_800,
    "via-primary-900": color === Color.PRIMARY_900,
    "via-secondary-50": color === Color.SECONDARY_50,
    "via-secondary-100": color === Color.SECONDARY_100,
    "via-secondary-200": color === Color.SECONDARY_200,
    "via-secondary-300": color === Color.SECONDARY_300,
    "via-secondary-400": color === Color.SECONDARY_400,
    "via-secondary-500": color === Color.SECONDARY_500,
    "via-secondary-600": color === Color.SECONDARY_600,
    "via-secondary-700": color === Color.SECONDARY_700,
    "via-secondary-800": color === Color.SECONDARY_800,
    "via-secondary-900": color === Color.SECONDARY_900,
    "via-success-50": color === Color.SUCCESS_50,
    "via-success-100": color === Color.SUCCESS_100,
    "via-success-200": color === Color.SUCCESS_200,
    "via-success-300": color === Color.SUCCESS_300,
    "via-success-400": color === Color.SUCCESS_400,
    "via-success-500": color === Color.SUCCESS_500,
    "via-success-600": color === Color.SUCCESS_600,
    "via-success-700": color === Color.SUCCESS_700,
    "via-success-800": color === Color.SUCCESS_800,
    "via-success-900": color === Color.SUCCESS_900,
    "via-warning-50": color === Color.WARNING_50,
    "via-warning-100": color === Color.WARNING_100,
    "via-warning-200": color === Color.WARNING_200,
    "via-warning-300": color === Color.WARNING_300,
    "via-warning-400": color === Color.WARNING_400,
    "via-warning-500": color === Color.WARNING_500,
    "via-warning-600": color === Color.WARNING_600,
    "via-warning-700": color === Color.WARNING_700,
    "via-warning-800": color === Color.WARNING_800,
    "via-warning-900": color === Color.WARNING_900,
    "via-danger-50": color === Color.DANGER_50,
    "via-danger-100": color === Color.DANGER_100,
    "via-danger-200": color === Color.DANGER_200,
    "via-danger-300": color === Color.DANGER_300,
    "via-danger-400": color === Color.DANGER_400,
    "via-danger-500": color === Color.DANGER_500,
    "via-danger-600": color === Color.DANGER_600,
    "via-danger-700": color === Color.DANGER_700,
    "via-danger-800": color === Color.DANGER_800,
    "via-danger-900": color === Color.DANGER_900,
  });
};
const coerceTailwindToColor = (color: Color) => {
  return clsx({
    "to-transparent": color === Color.TRANSPARENT,
    "to-background": color === Color.BACKGROUND,
    "to-foreground": color === Color.FOREGROUND,
    "to-divider": color === Color.DIVIDER,
    "to-focus": color === Color.FOCUS,
    "to-content1": color === Color.CONTENT1,
    "to-content2": color === Color.CONTENT2,
    "to-content3": color === Color.CONTENT3,
    "to-content4": color === Color.CONTENT4,
    "to-default": color === Color.DEFAULT,
    "to-primary": color === Color.DEFAULT_PRIMARY,
    "to-secondary": color === Color.DEFAULT_SECONDARY,
    "to-success": color === Color.DEFAULT_SUCCESS,
    "to-warning": color === Color.DEFAULT_WARNING,
    "to-danger": color === Color.DEFAULT_DANGER,
    "to-primary-50": color === Color.PRIMARY_50,
    "to-primary-100": color === Color.PRIMARY_100,
    "to-primary-200": color === Color.PRIMARY_200,
    "to-primary-300": color === Color.PRIMARY_300,
    "to-primary-400": color === Color.PRIMARY_400,
    "to-primary-500": color === Color.PRIMARY_500,
    "to-primary-600": color === Color.PRIMARY_600,
    "to-primary-700": color === Color.PRIMARY_700,
    "to-primary-800": color === Color.PRIMARY_800,
    "to-primary-900": color === Color.PRIMARY_900,
    "to-secondary-50": color === Color.SECONDARY_50,
    "to-secondary-100": color === Color.SECONDARY_100,
    "to-secondary-200": color === Color.SECONDARY_200,
    "to-secondary-300": color === Color.SECONDARY_300,
    "to-secondary-400": color === Color.SECONDARY_400,
    "to-secondary-500": color === Color.SECONDARY_500,
    "to-secondary-600": color === Color.SECONDARY_600,
    "to-secondary-700": color === Color.SECONDARY_700,
    "to-secondary-800": color === Color.SECONDARY_800,
    "to-secondary-900": color === Color.SECONDARY_900,
    "to-success-50": color === Color.SUCCESS_50,
    "to-success-100": color === Color.SUCCESS_100,
    "to-success-200": color === Color.SUCCESS_200,
    "to-success-300": color === Color.SUCCESS_300,
    "to-success-400": color === Color.SUCCESS_400,
    "to-success-500": color === Color.SUCCESS_500,
    "to-success-600": color === Color.SUCCESS_600,
    "to-success-700": color === Color.SUCCESS_700,
    "to-success-800": color === Color.SUCCESS_800,
    "to-success-900": color === Color.SUCCESS_900,
    "to-warning-50": color === Color.WARNING_50,
    "to-warning-100": color === Color.WARNING_100,
    "to-warning-200": color === Color.WARNING_200,
    "to-warning-300": color === Color.WARNING_300,
    "to-warning-400": color === Color.WARNING_400,
    "to-warning-500": color === Color.WARNING_500,
    "to-warning-600": color === Color.WARNING_600,
    "to-warning-700": color === Color.WARNING_700,
    "to-warning-800": color === Color.WARNING_800,
    "to-warning-900": color === Color.WARNING_900,
    "to-danger-50": color === Color.DANGER_50,
    "to-danger-100": color === Color.DANGER_100,
    "to-danger-200": color === Color.DANGER_200,
    "to-danger-300": color === Color.DANGER_300,
    "to-danger-400": color === Color.DANGER_400,
    "to-danger-500": color === Color.DANGER_500,
    "to-danger-600": color === Color.DANGER_600,
    "to-danger-700": color === Color.DANGER_700,
    "to-danger-800": color === Color.DANGER_800,
    "to-danger-900": color === Color.DANGER_900,
  });
};

const coerceTailwindGradientDirection = (direction: GradientDirection) => {
  return clsx({
    "bg-gradient-to-t": direction === GradientDirection.TO_T,
    "bg-gradient-to-tr": direction === GradientDirection.TO_TR,
    "bg-gradient-to-r": direction === GradientDirection.TO_R,
    "bg-gradient-to-br": direction === GradientDirection.TO_BR,
    "bg-gradient-to-b": direction === GradientDirection.TO_B,
    "bg-gradient-to-bl": direction === GradientDirection.TO_BL,
    "bg-gradient-to-l": direction === GradientDirection.TO_L,
    "bg-gradient-to-tl": direction === GradientDirection.TO_TL,
  });
};

export const coerceTailwindBackgroundGradient = (
  direction?: GradientDirection,
  colours?: Array<Color>,
) => {
  if (!direction || !colours) {
    return "";
  }

  const gradientDirection = coerceTailwindGradientDirection(direction);

  const gradient = colours.map((color, index) => {
    if (index === 0) {
      return coerceTailwindFromColor(color);
    }

    if (index === colours.length - 1) {
      return coerceTailwindToColor(color);
    }

    return coerceTailwindViaColor(color);
  }, [] as Array<string>);

  return clsx(gradientDirection, gradient);
};
